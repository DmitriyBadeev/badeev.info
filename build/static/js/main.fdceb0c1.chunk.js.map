{"version":3,"sources":["pages/main/MainPage.module.less","components/logo/Logo.module.less","components/burger/Burger.module.less","pages/shared/footer/Footer.module.less","pages/shared/header/Header.module.less","assets/avatar.png","assets/vk.svg","assets/github.svg","assets/telegram.svg","components/fade/FadePage.module.less","components/loading/Loading.module.less","assets/web.svg","components/logo/Logo.tsx","components/burger/Burger.tsx","components/links/LocalLink.tsx","pages/shared/navbar/Navbar.tsx","pages/shared/header/Header.tsx","pages/shared/footer/Footer.tsx","pages/shared/Shared.tsx","helpers/dateHelpers.ts","components/links/GlobalLink.tsx","components/avatar/Contacts.tsx","components/avatar/Avatar.tsx","components/cards/Card.tsx","components/cards/Line.tsx","components/tags/Tag.tsx","components/tags/TagList.tsx","components/fade/FadePage.tsx","types.tsx","components/cards/CardDescription.tsx","components/cards/ImageCard.tsx","components/cards/ProjectCard.tsx","components/loading/Loading.tsx","components/cards/LastProjectCards.tsx","pages/main/MainPage.tsx","pages/portfolio/PortfolioPage.tsx","pages/work/WorkPage.tsx","App.tsx","index.tsx","components/cards/cards.module.less","components/avatar/Avatar.module.less","components/links/links.module.less","pages/shared/navbar/Navbar.module.less","components/tags/tags.module.less"],"names":["module","exports","Logo","props","to","className","styles","logo","point","Burger","wrapper","onClick","burger","LocalLink","type","children","darkOrWhite","default","dark","active","window","location","pathname","style","color","Title","titleStyles","borderBottom","paddingBottom","enterHandler","e","preventDefault","console","log","target","Navbar","CSSTransition","in","isOpen","timeout","classNames","unmountOnExit","mountOnEnter","background","cross","onClose","width","marginTop","justify","gutter","lg","span","order","md","sm","xs","level","onSubmit","direction","size","Password","name","prefix","LockOutlined","placeholder","htmlType","button","Header","useState","isOpenNavbar","setIsOpenNavbar","height","padding","lineHeight","Paragraph","Footer","footer","margin","Date","getFullYear","Content","Shared","minHeight","getCorrectForm","days","lastDigit","lastTwoDigits","GlobalLink","href","rel","Contacts","ClassName","SizeInPixel","src","vk","alt","iconLink","marginLeft","github","telegram","AvatarDesc","avatarDesc","info","column","Item","label","Avatar","withDesc","avatarWrapper","img","avatar","Card","card","Line","line","Tag","tag","TagList","tagList","map","i","key","FadePage","inProp","setInProp","useEffect","enter","exit","LastWorksDocument","gql","WorkByIdDocument","CardDescription","desc","date","title","ImageCard","isMouseEnter","setIsMouseEnter","imgEl","useRef","imgCard","transitionStyles","current","heightContainer","clientHeight","entering","top","entered","exiting","exited","unmounted","ref","imageCard","paddingTop","Transition","state","onMouseOver","onMouseOut","image","ProjectCard","id","link","Loading","LastProjectCards","baseOptions","variables","count","ApolloReactHooks","data","loading","error","message","works","nodes","work","toLocaleString","year","month","day","timeZone","imgPath","shortDescription","getWorks","MainPage","figure","square","circle","rectangle","mainSectionWrapper","leftCol","webSvg","rightCol","subMainTitle","mainTitle","btn","infoSectionWrapper","xl","offset","now","dif","getTime","Math","trunc","getDaysToEnd","opacity","cursor","linkContainer","ArrowRightOutlined","mainContacts","innerContacts","mainMail","mainOther","PortfolioPage","WorkPage","useParams","Number","worksById","client","ApolloClient","uri","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdceb0c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperPage\":\"wrapperPage--21E4P\",\"mainSectionWrapper\":\"mainSectionWrapper--2-zUb\",\"rightCol\":\"rightCol--2X1uP\",\"subMainTitle\":\"subMainTitle--3-Ydm\",\"mainTitle\":\"mainTitle--1FzIi\",\"btn\":\"btn--C80ES\",\"leftCol\":\"leftCol--1V-J0\",\"infoSectionWrapper\":\"infoSectionWrapper--jHftP\",\"figure\":\"figure--2t4ht\",\"square\":\"square--c1hAs\",\"Square\":\"Square--24ajS\",\"circle\":\"circle--W7RGZ\",\"Circle\":\"Circle--1GWzX\",\"rectangle\":\"rectangle--20sPi\",\"Rectangle\":\"Rectangle--15DP3\",\"linkContainer\":\"linkContainer--1lbd5\",\"link\":\"link--1ySYK\",\"passwordIcon\":\"passwordIcon--3b68M\",\"mainContacts\":\"mainContacts--1YAvd\",\"innerContacts\":\"innerContacts--2GoFY\",\"mainMail\":\"mainMail--eoreh\",\"mainOther\":\"mainOther--3lcZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo--3Hs_6\",\"point\":\"point--3w-x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper--3xbLT\",\"burger\":\"burger--1BGx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer--3t_PR\",\"logo\":\"logo--1cMlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper--3QFT_\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.0d69a03b.png\";","module.exports = __webpack_public_path__ + \"static/media/vk.b03024c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.db0721b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.a888fec0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper--3qzYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper--DTbtW\"};","module.exports = __webpack_public_path__ + \"static/media/web.038f0a1e.svg\";","import React from \"react\"\r\nimport styles from \"./Logo.module.less\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ntype typeProps = {\r\n    className?: string\r\n}\r\n\r\nconst Logo: React.FC<typeProps> = (props) => {\r\n    return (\r\n        <Link to=\"/\">\r\n            <div className={`${styles.logo} ${props.className}`}>\r\n                Badeev<span className={styles.point}>.</span>info\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React from \"react\"\r\nimport styles from \"./Burger.module.less\"\r\n\r\ntype propTypes = {\r\n    onClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n}\r\n\r\nconst Burger: React.FC<propTypes> = (props) => {\r\n    return (\r\n        <div className={styles.wrapper} onClick={props.onClick}>\r\n            <div className={styles.burger} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport styles from \"./links.module.less\"\r\n\r\ntype propTypes = {\r\n    to: string\r\n    type?: \"dark\" | \"default\"\r\n    className?: string\r\n    onClick?: (event: React.MouseEvent) => void\r\n}\r\n\r\nconst LocalLink: React.FC<propTypes> = ({ to, type = \"default\", className, children, onClick }) => {\r\n    const darkOrWhite = type === \"default\" ? styles.default : styles.dark\r\n\r\n    const currentHref = window.location.pathname\r\n    const active = currentHref === to\r\n\r\n    return (\r\n        <Link to={to} className={`${darkOrWhite} ${className}`} onClick={onClick}>\r\n            <span\r\n                className={type === \"default\" ? \"underline\" : \"underline-white\"}\r\n                style={{ color: active ? \"#407BFF\" : \"\" }}\r\n            >\r\n                {children}\r\n            </span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default LocalLink\r\n","import React from \"react\"\r\nimport { Typography, Button, Row, Col, Input, Space } from \"antd\"\r\nimport styles from \"./Navbar.module.less\"\r\nimport LocalLink from \"../../../components/links/LocalLink\"\r\nimport CSSTransition from \"react-transition-group/CSSTransition\"\r\nimport { LockOutlined } from \"@ant-design/icons\"\r\n\r\nconst { Title } = Typography\r\n\r\nconst titleStyles = {\r\n    color: \"#fff\",\r\n    borderBottom: \"solid 2px #fff\",\r\n    paddingBottom: \"20px\",\r\n}\r\n\r\ntype propTypes = {\r\n    isOpen: boolean\r\n    onClose: (event: React.MouseEvent) => void\r\n}\r\n\r\nconst enterHandler = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    console.log(e.target)\r\n}\r\n\r\nconst Navbar: React.FC<propTypes> = (props) => {\r\n    return (\r\n        <CSSTransition\r\n            in={props.isOpen}\r\n            timeout={300}\r\n            classNames=\"modalNavbar\"\r\n            unmountOnExit={true}\r\n            mountOnEnter={true}\r\n        >\r\n            <div className={styles.background}>\r\n                <div className={styles.cross} onClick={props.onClose}>\r\n                    ×\r\n                </div>\r\n\r\n                <Row style={{ width: \"100vw\", marginTop: \"60px\" }} justify=\"space-around\" gutter={[0, 40]}>\r\n                    <Col\r\n                        lg={{ span: 9, order: 1 }}\r\n                        md={{ span: 16, order: 2 }}\r\n                        sm={{ span: 20, order: 2 }}\r\n                        xs={{ span: 24, order: 2 }}\r\n                    >\r\n                        <Title level={1} style={titleStyles}>\r\n                            Тайный бункер\r\n                        </Title>\r\n                        <form onSubmit={enterHandler}>\r\n                            <Space direction=\"vertical\" size=\"large\" className=\"mt-30 w-100\">\r\n                                <Input.Password\r\n                                    name=\"password\"\r\n                                    prefix={<LockOutlined style={{ color: \"#8C8C8C\" }} />}\r\n                                    placeholder=\"Секретный ключ\"\r\n                                    size=\"large\"\r\n                                />\r\n                                <Button htmlType=\"submit\" type=\"primary\" className={styles.button} size=\"large\">\r\n                                    Войти\r\n                                </Button>\r\n                            </Space>\r\n                        </form>\r\n                    </Col>\r\n                    <Col\r\n                        lg={{ span: 9, order: 2 }}\r\n                        md={{ span: 16, order: 1 }}\r\n                        sm={{ span: 20, order: 2 }}\r\n                        xs={{ span: 24, order: 2 }}\r\n                    >\r\n                        <Title level={1} style={titleStyles}>\r\n                            Навигация\r\n                        </Title>\r\n\r\n                        <div className={styles.wrapper}>\r\n                            <LocalLink to=\"/\" onClick={props.onClose} type=\"dark\">\r\n                                Главная\r\n                            </LocalLink>\r\n                            <LocalLink to=\"/portfolio\" onClick={props.onClose} type=\"dark\">\r\n                                Портфолио\r\n                            </LocalLink>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from \"react\"\r\nimport Logo from \"../../../components/logo/Logo\"\r\nimport Burger from \"../../../components/burger/Burger\"\r\nimport Navbar from \"../navbar/Navbar\"\r\nimport styles from \"./Header.module.less\"\r\nimport { Layout } from \"antd\"\r\n\r\nconst Header: React.FC = () => {\r\n    const [isOpenNavbar, setIsOpenNavbar] = useState(false)\r\n\r\n    return (\r\n        <Layout.Header\r\n            style={{\r\n                background: \"transparent\",\r\n                height: \"auto\",\r\n                padding: \"0\",\r\n                lineHeight: \"inherit\",\r\n            }}\r\n        >\r\n            <Navbar onClose={() => setIsOpenNavbar(false)} isOpen={isOpenNavbar} />\r\n            <div className={styles.wrapper}>\r\n                <Logo />\r\n                <Burger onClick={() => setIsOpenNavbar(true)} />\r\n            </div>\r\n        </Layout.Header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport styles from \"./Footer.module.less\"\r\nimport Logo from \"../../../components/logo/Logo\"\r\nimport { Layout, Typography } from \"antd\"\r\n\r\nconst { Paragraph } = Typography\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <Layout.Footer className={styles.footer}>\r\n            <Logo className={styles.logo} />\r\n            <Paragraph style={{ color: \"#909090\", margin: \"10px 0 0 0\" }}>\r\n                © Дмитрий Бадеев, {new Date().getFullYear()} г.\r\n            </Paragraph>\r\n        </Layout.Footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport Header from \"./header/Header\"\r\nimport Footer from \"./footer/Footer\"\r\nimport { Layout } from \"antd\"\r\n\r\nconst { Content } = Layout\r\n\r\nconst Shared: React.FC = (props) => {\r\n    return (\r\n        <Layout style={{ background: \"transparent\", minHeight: \"100vh\" }}>\r\n            <Header />\r\n            <Content>{props.children}</Content>\r\n            <Footer />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Shared\r\n","export const getStringDate = (date: string) => {\r\n    return new Date(date).toLocaleString(\"ru\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        timeZone: \"Europe/Moscow\",\r\n    })\r\n}\r\n\r\nexport const getDaysToEnd = () => {\r\n    let now = new Date()\r\n    let end = new Date(\"07.01.2022\")\r\n\r\n    let dif = end.getTime() - now.getTime()\r\n    let days = Math.trunc(dif / 1000 / 60 / 60 / 24)\r\n    return getCorrectForm(days)\r\n}\r\n\r\nexport const getCorrectForm = (days: number) => {\r\n    let lastDigit = days % 10\r\n    let lastTwoDigits = days % 100\r\n    if ((lastTwoDigits >= 5 && lastTwoDigits) <= 20 || lastDigit === 0 || lastDigit >= 5) return days + \" дней\"\r\n    if (lastDigit === 1) return days + \" день\"\r\n    if (lastDigit >= 2 && lastDigit <= 4) return days + \" дня\"\r\n}\r\n\r\nexport const getAge = () => {\r\n    let now = new Date().getFullYear()\r\n    return now - 2000\r\n}\r\n","import React from \"react\"\r\nimport styles from \"./links.module.less\"\r\n\r\ntype propTypes = {\r\n    to: string\r\n    type?: \"dark\" | \"default\"\r\n    className?: string\r\n}\r\n\r\nconst GlobalLink: React.FC<propTypes> = ({ to, type = \"default\", className, children }) => {\r\n    const darkOrWhite = type === \"default\" ? styles.default : styles.dark\r\n\r\n    return (\r\n        <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" className={`${darkOrWhite} ${className}`}>\r\n            <span className={type === \"default\" ? \"underline\" : \"underline-white\"}>{children}</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default GlobalLink\r\n","import React from \"react\"\r\nimport styles from \"./Avatar.module.less\"\r\nimport vk from \"../../assets/vk.svg\"\r\nimport github from \"../../assets/github.svg\"\r\nimport telegram from \"../../assets/telegram.svg\"\r\n\r\ntype propTypes = {\r\n    ClassName?: string\r\n    SizeInPixel?: number\r\n}\r\n\r\nconst Contacts: React.FC<propTypes> = ({ ClassName, SizeInPixel = 30 }) => {\r\n    return (\r\n        <div className={ClassName}>\r\n            <a href=\"https://vk.com/d_503_45\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <img\r\n                    src={vk}\r\n                    alt=\"Вконтакте\"\r\n                    className={styles.iconLink}\r\n                    style={{\r\n                        width: `${SizeInPixel}px`,\r\n                        height: `${SizeInPixel}px`,\r\n                        marginLeft: `${SizeInPixel / 3}px`,\r\n                    }}\r\n                />\r\n            </a>\r\n            <a href=\"https://github.com/DmitriyBadeev\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <img\r\n                    src={github}\r\n                    alt=\"GitHub\"\r\n                    className={styles.iconLink}\r\n                    style={{\r\n                        width: `${SizeInPixel}px`,\r\n                        height: `${SizeInPixel}px`,\r\n                        marginLeft: `${SizeInPixel / 3}px`,\r\n                    }}\r\n                />\r\n            </a>\r\n            <a href=\"https://t.me/DmitriyBadeev\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <img\r\n                    src={telegram}\r\n                    alt=\"Telegram\"\r\n                    className={styles.iconLink}\r\n                    style={{\r\n                        width: `${SizeInPixel}px`,\r\n                        height: `${SizeInPixel}px`,\r\n                        marginLeft: `${SizeInPixel / 3}px`,\r\n                    }}\r\n                />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts\r\n","import React from \"react\"\r\nimport styles from \"./Avatar.module.less\"\r\nimport { Typography, Descriptions } from \"antd\"\r\nimport img from \"../../assets/avatar.png\"\r\nimport { getAge } from \"../../helpers/dateHelpers\"\r\nimport GlobalLink from \"../../components/links/GlobalLink\"\r\nimport Contacts from \"./Contacts\"\r\n\r\nconst { Paragraph, Title } = Typography\r\n\r\ntype typeProps = {\r\n    withDesc: boolean\r\n}\r\n\r\nconst Avatar: React.FC<typeProps> = (withDesc) => {\r\n    return (\r\n        <>\r\n            <div className={styles.avatarWrapper}>\r\n                <img src={img} alt=\"Аватар\" className={styles.avatar} />\r\n            </div>\r\n            {withDesc && <AvatarDesc />}\r\n        </>\r\n    )\r\n}\r\n\r\nconst AvatarDesc: React.FC = () => {\r\n    return (\r\n        <div className={styles.avatarDesc}>\r\n            <Paragraph type=\"secondary\" className={styles.info}>\r\n                <span>{getAge()}&thinsp;лет</span> <span>Веб-разработчик</span>\r\n                <span>Екатеринбург</span>\r\n            </Paragraph>\r\n            <Title className={styles.name} level={3}>\r\n                Дмитрий Бадеев\r\n            </Title>\r\n\r\n            <Descriptions column={1} className=\"mt-30\">\r\n                <Descriptions.Item label=\"Почта\">\r\n                    <GlobalLink to=\"mailto:mail@badeev.info\">mail@badeev.info</GlobalLink>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Телефон\">\r\n                    <GlobalLink to=\"tel:+79195967515\">+7&thinsp;919&thinsp;596-75-15</GlobalLink>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Другое\">\r\n                    <Contacts />\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar\r\n","import React from \"react\"\r\nimport styles from \"./cards.module.less\"\r\n\r\ntype propTypes = {\r\n    className?: string\r\n}\r\n\r\nconst Card: React.FC<propTypes> = (props) => {\r\n    return <div className={`${props.className} ${styles.card}`}>{props.children}</div>\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\"\r\nimport styles from \"./cards.module.less\"\r\n\r\nconst Line: React.FC = () => {\r\n    return <div className={styles.line} />\r\n}\r\n\r\nexport default Line\r\n","import React from \"react\"\r\nimport styles from \"./tags.module.less\"\r\n\r\nconst Tag: React.FC = (props) => {\r\n    return <div className={styles.tag}>{props.children}</div>\r\n}\r\n\r\nexport default Tag\r\n","import React from \"react\"\r\nimport styles from \"./tags.module.less\"\r\nimport Tag from \"./Tag\"\r\n\r\ntype propTypes = {\r\n    tagList: Array<string>\r\n}\r\n\r\nconst TagList: React.FC<propTypes> = (props) => {\r\n    return (\r\n        <div className={styles.tagList}>\r\n            {props.tagList.map((tag, i) => {\r\n                return <Tag key={i}>{tag}</Tag>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagList\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\n\r\nimport styles from \"./FadePage.module.less\"\r\n\r\nconst FadePage: React.FC = (props) => {\r\n    const [inProp, setInProp] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setInProp(true)\r\n    }, [])\r\n\r\n    return (\r\n        <CSSTransition classNames=\"page-fade\" in={inProp} timeout={{ enter: 500, exit: 0 }}>\r\n            <div className={styles.wrapper}>{props.children}</div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default FadePage\r\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The multiplier path scalar represents a valid GraphQL multiplier path string. */\n  MultiplierPath: any;\n  PaginationAmount: any;\n  /** The `DateTime` scalar represents an ISO-8601 compliant date time type. */\n  DateTime: any;\n};\n\nexport type Queries = {\n  __typename?: 'Queries';\n  authors?: Maybe<Array<Maybe<Author>>>;\n  tags?: Maybe<Array<Maybe<Tag>>>;\n  works?: Maybe<WorkConnection>;\n  worksById?: Maybe<Work>;\n};\n\n\nexport type QueriesAuthorsArgs = {\n  where?: Maybe<AuthorFilter>;\n};\n\n\nexport type QueriesTagsArgs = {\n  where?: Maybe<TagFilter>;\n};\n\n\nexport type QueriesWorksArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['PaginationAmount']>;\n  last?: Maybe<Scalars['PaginationAmount']>;\n  where?: Maybe<WorkFilter>;\n};\n\n\nexport type QueriesWorksByIdArgs = {\n  id: Scalars['Int'];\n};\n\nexport type Mutations = {\n  __typename?: 'Mutations';\n  connectTagAndWork?: Maybe<TagWork>;\n  createAuthor?: Maybe<Author>;\n  createTag?: Maybe<Tag>;\n  createWork?: Maybe<Work>;\n};\n\n\nexport type MutationsConnectTagAndWorkArgs = {\n  inputTagWork?: Maybe<ConnectTagWorkInput>;\n};\n\n\nexport type MutationsCreateAuthorArgs = {\n  inputAuthor?: Maybe<CreateAuthorInput>;\n};\n\n\nexport type MutationsCreateTagArgs = {\n  inputTag?: Maybe<CreateTagInput>;\n};\n\n\nexport type MutationsCreateWorkArgs = {\n  inputWork?: Maybe<CreateWorkInput>;\n};\n\n\nexport type Work = {\n  __typename?: 'Work';\n  authors?: Maybe<Array<Maybe<Author>>>;\n  countViews: Scalars['Int'];\n  date: Scalars['DateTime'];\n  html?: Maybe<Scalars['String']>;\n  id: Scalars['Int'];\n  imgPath?: Maybe<Scalars['String']>;\n  link?: Maybe<Scalars['String']>;\n  shortDescription?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Maybe<TagWork>>>;\n  task?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type WorkFilter = {\n  AND?: Maybe<Array<WorkFilter>>;\n  countViews?: Maybe<Scalars['Int']>;\n  countViews_gt?: Maybe<Scalars['Int']>;\n  countViews_gte?: Maybe<Scalars['Int']>;\n  countViews_in?: Maybe<Array<Scalars['Int']>>;\n  countViews_lt?: Maybe<Scalars['Int']>;\n  countViews_lte?: Maybe<Scalars['Int']>;\n  countViews_not?: Maybe<Scalars['Int']>;\n  countViews_not_gt?: Maybe<Scalars['Int']>;\n  countViews_not_gte?: Maybe<Scalars['Int']>;\n  countViews_not_in?: Maybe<Array<Scalars['Int']>>;\n  countViews_not_lt?: Maybe<Scalars['Int']>;\n  countViews_not_lte?: Maybe<Scalars['Int']>;\n  date?: Maybe<Scalars['DateTime']>;\n  date_gt?: Maybe<Scalars['DateTime']>;\n  date_gte?: Maybe<Scalars['DateTime']>;\n  date_in?: Maybe<Array<Scalars['DateTime']>>;\n  date_lt?: Maybe<Scalars['DateTime']>;\n  date_lte?: Maybe<Scalars['DateTime']>;\n  date_not?: Maybe<Scalars['DateTime']>;\n  date_not_gt?: Maybe<Scalars['DateTime']>;\n  date_not_gte?: Maybe<Scalars['DateTime']>;\n  date_not_in?: Maybe<Array<Scalars['DateTime']>>;\n  date_not_lt?: Maybe<Scalars['DateTime']>;\n  date_not_lte?: Maybe<Scalars['DateTime']>;\n  html?: Maybe<Scalars['String']>;\n  html_contains?: Maybe<Scalars['String']>;\n  html_ends_with?: Maybe<Scalars['String']>;\n  html_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  html_not?: Maybe<Scalars['String']>;\n  html_not_contains?: Maybe<Scalars['String']>;\n  html_not_ends_with?: Maybe<Scalars['String']>;\n  html_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  html_not_starts_with?: Maybe<Scalars['String']>;\n  html_starts_with?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  id_gt?: Maybe<Scalars['Int']>;\n  id_gte?: Maybe<Scalars['Int']>;\n  id_in?: Maybe<Array<Scalars['Int']>>;\n  id_lt?: Maybe<Scalars['Int']>;\n  id_lte?: Maybe<Scalars['Int']>;\n  id_not?: Maybe<Scalars['Int']>;\n  id_not_gt?: Maybe<Scalars['Int']>;\n  id_not_gte?: Maybe<Scalars['Int']>;\n  id_not_in?: Maybe<Array<Scalars['Int']>>;\n  id_not_lt?: Maybe<Scalars['Int']>;\n  id_not_lte?: Maybe<Scalars['Int']>;\n  imgPath?: Maybe<Scalars['String']>;\n  imgPath_contains?: Maybe<Scalars['String']>;\n  imgPath_ends_with?: Maybe<Scalars['String']>;\n  imgPath_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  imgPath_not?: Maybe<Scalars['String']>;\n  imgPath_not_contains?: Maybe<Scalars['String']>;\n  imgPath_not_ends_with?: Maybe<Scalars['String']>;\n  imgPath_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  imgPath_not_starts_with?: Maybe<Scalars['String']>;\n  imgPath_starts_with?: Maybe<Scalars['String']>;\n  link?: Maybe<Scalars['String']>;\n  link_contains?: Maybe<Scalars['String']>;\n  link_ends_with?: Maybe<Scalars['String']>;\n  link_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  link_not?: Maybe<Scalars['String']>;\n  link_not_contains?: Maybe<Scalars['String']>;\n  link_not_ends_with?: Maybe<Scalars['String']>;\n  link_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  link_not_starts_with?: Maybe<Scalars['String']>;\n  link_starts_with?: Maybe<Scalars['String']>;\n  OR?: Maybe<Array<WorkFilter>>;\n  shortDescription?: Maybe<Scalars['String']>;\n  shortDescription_contains?: Maybe<Scalars['String']>;\n  shortDescription_ends_with?: Maybe<Scalars['String']>;\n  shortDescription_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  shortDescription_not?: Maybe<Scalars['String']>;\n  shortDescription_not_contains?: Maybe<Scalars['String']>;\n  shortDescription_not_ends_with?: Maybe<Scalars['String']>;\n  shortDescription_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  shortDescription_not_starts_with?: Maybe<Scalars['String']>;\n  shortDescription_starts_with?: Maybe<Scalars['String']>;\n  task?: Maybe<Scalars['String']>;\n  task_contains?: Maybe<Scalars['String']>;\n  task_ends_with?: Maybe<Scalars['String']>;\n  task_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  task_not?: Maybe<Scalars['String']>;\n  task_not_contains?: Maybe<Scalars['String']>;\n  task_not_ends_with?: Maybe<Scalars['String']>;\n  task_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  task_not_starts_with?: Maybe<Scalars['String']>;\n  task_starts_with?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  title_contains?: Maybe<Scalars['String']>;\n  title_ends_with?: Maybe<Scalars['String']>;\n  title_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  title_not?: Maybe<Scalars['String']>;\n  title_not_contains?: Maybe<Scalars['String']>;\n  title_not_ends_with?: Maybe<Scalars['String']>;\n  title_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  title_not_starts_with?: Maybe<Scalars['String']>;\n  title_starts_with?: Maybe<Scalars['String']>;\n};\n\n/** A connection to a list of items. */\nexport type WorkConnection = {\n  __typename?: 'WorkConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<WorkEdge>>;\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<Work>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n\nexport type TagFilter = {\n  AND?: Maybe<Array<TagFilter>>;\n  description?: Maybe<Scalars['String']>;\n  description_contains?: Maybe<Scalars['String']>;\n  description_ends_with?: Maybe<Scalars['String']>;\n  description_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  description_not?: Maybe<Scalars['String']>;\n  description_not_contains?: Maybe<Scalars['String']>;\n  description_not_ends_with?: Maybe<Scalars['String']>;\n  description_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  description_not_starts_with?: Maybe<Scalars['String']>;\n  description_starts_with?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  id_gt?: Maybe<Scalars['Int']>;\n  id_gte?: Maybe<Scalars['Int']>;\n  id_in?: Maybe<Array<Scalars['Int']>>;\n  id_lt?: Maybe<Scalars['Int']>;\n  id_lte?: Maybe<Scalars['Int']>;\n  id_not?: Maybe<Scalars['Int']>;\n  id_not_gt?: Maybe<Scalars['Int']>;\n  id_not_gte?: Maybe<Scalars['Int']>;\n  id_not_in?: Maybe<Array<Scalars['Int']>>;\n  id_not_lt?: Maybe<Scalars['Int']>;\n  id_not_lte?: Maybe<Scalars['Int']>;\n  OR?: Maybe<Array<TagFilter>>;\n  title?: Maybe<Scalars['String']>;\n  title_contains?: Maybe<Scalars['String']>;\n  title_ends_with?: Maybe<Scalars['String']>;\n  title_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  title_not?: Maybe<Scalars['String']>;\n  title_not_contains?: Maybe<Scalars['String']>;\n  title_not_ends_with?: Maybe<Scalars['String']>;\n  title_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  title_not_starts_with?: Maybe<Scalars['String']>;\n  title_starts_with?: Maybe<Scalars['String']>;\n};\n\nexport type AuthorFilter = {\n  AND?: Maybe<Array<AuthorFilter>>;\n  id?: Maybe<Scalars['Int']>;\n  id_gt?: Maybe<Scalars['Int']>;\n  id_gte?: Maybe<Scalars['Int']>;\n  id_in?: Maybe<Array<Scalars['Int']>>;\n  id_lt?: Maybe<Scalars['Int']>;\n  id_lte?: Maybe<Scalars['Int']>;\n  id_not?: Maybe<Scalars['Int']>;\n  id_not_gt?: Maybe<Scalars['Int']>;\n  id_not_gte?: Maybe<Scalars['Int']>;\n  id_not_in?: Maybe<Array<Scalars['Int']>>;\n  id_not_lt?: Maybe<Scalars['Int']>;\n  id_not_lte?: Maybe<Scalars['Int']>;\n  link?: Maybe<Scalars['String']>;\n  link_contains?: Maybe<Scalars['String']>;\n  link_ends_with?: Maybe<Scalars['String']>;\n  link_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  link_not?: Maybe<Scalars['String']>;\n  link_not_contains?: Maybe<Scalars['String']>;\n  link_not_ends_with?: Maybe<Scalars['String']>;\n  link_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  link_not_starts_with?: Maybe<Scalars['String']>;\n  link_starts_with?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  name_contains?: Maybe<Scalars['String']>;\n  name_ends_with?: Maybe<Scalars['String']>;\n  name_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  name_not?: Maybe<Scalars['String']>;\n  name_not_contains?: Maybe<Scalars['String']>;\n  name_not_ends_with?: Maybe<Scalars['String']>;\n  name_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  name_not_starts_with?: Maybe<Scalars['String']>;\n  name_starts_with?: Maybe<Scalars['String']>;\n  OR?: Maybe<Array<AuthorFilter>>;\n  role?: Maybe<Scalars['String']>;\n  role_contains?: Maybe<Scalars['String']>;\n  role_ends_with?: Maybe<Scalars['String']>;\n  role_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  role_not?: Maybe<Scalars['String']>;\n  role_not_contains?: Maybe<Scalars['String']>;\n  role_not_ends_with?: Maybe<Scalars['String']>;\n  role_not_in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  role_not_starts_with?: Maybe<Scalars['String']>;\n  role_starts_with?: Maybe<Scalars['String']>;\n  workId?: Maybe<Scalars['Int']>;\n  workId_gt?: Maybe<Scalars['Int']>;\n  workId_gte?: Maybe<Scalars['Int']>;\n  workId_in?: Maybe<Array<Scalars['Int']>>;\n  workId_lt?: Maybe<Scalars['Int']>;\n  workId_lte?: Maybe<Scalars['Int']>;\n  workId_not?: Maybe<Scalars['Int']>;\n  workId_not_gt?: Maybe<Scalars['Int']>;\n  workId_not_gte?: Maybe<Scalars['Int']>;\n  workId_not_in?: Maybe<Array<Scalars['Int']>>;\n  workId_not_lt?: Maybe<Scalars['Int']>;\n  workId_not_lte?: Maybe<Scalars['Int']>;\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** Indicates whether more edges exist following the set defined by the clients arguments. */\n  hasNextPage: Scalars['Boolean'];\n  /** Indicates whether more edges exist prior the set defined by the clients arguments. */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\n/** An edge in a connection. */\nexport type WorkEdge = {\n  __typename?: 'WorkEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Work>;\n};\n\nexport type Tag = {\n  __typename?: 'Tag';\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['Int'];\n  title?: Maybe<Scalars['String']>;\n  works?: Maybe<Array<Maybe<TagWork>>>;\n};\n\nexport type Author = {\n  __typename?: 'Author';\n  id: Scalars['Int'];\n  link?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  role?: Maybe<Scalars['String']>;\n  work?: Maybe<Work>;\n  workId: Scalars['Int'];\n};\n\nexport type CreateWorkInput = {\n  date: Scalars['DateTime'];\n  html?: Maybe<Scalars['String']>;\n  imgPath?: Maybe<Scalars['String']>;\n  link?: Maybe<Scalars['String']>;\n  shortDescription?: Maybe<Scalars['String']>;\n  task?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type CreateTagInput = {\n  description?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type ConnectTagWorkInput = {\n  tagId: Scalars['Int'];\n  workId: Scalars['Int'];\n};\n\nexport type TagWork = {\n  __typename?: 'TagWork';\n  id: Scalars['Int'];\n  tag?: Maybe<Tag>;\n  tagId: Scalars['Int'];\n  work?: Maybe<Work>;\n  workId: Scalars['Int'];\n};\n\nexport type CreateAuthorInput = {\n  link?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  role?: Maybe<Scalars['String']>;\n  workId: Scalars['Int'];\n};\n\n\nexport type LastWorksQueryVariables = Exact<{\n  count?: Maybe<Scalars['PaginationAmount']>;\n}>;\n\n\nexport type LastWorksQuery = (\n  { __typename?: 'Queries' }\n  & { works?: Maybe<(\n    { __typename?: 'WorkConnection' }\n    & { nodes?: Maybe<Array<Maybe<(\n      { __typename?: 'Work' }\n      & Pick<Work, 'id' | 'title' | 'shortDescription' | 'date' | 'imgPath'>\n    )>>> }\n  )> }\n);\n\nexport type WorksQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type WorksQuery = (\n  { __typename?: 'Queries' }\n  & { works?: Maybe<(\n    { __typename?: 'WorkConnection' }\n    & { nodes?: Maybe<Array<Maybe<(\n      { __typename?: 'Work' }\n      & Pick<Work, 'id' | 'title' | 'shortDescription' | 'date' | 'imgPath'>\n    )>>> }\n  )> }\n);\n\nexport type WorkByIdQueryVariables = Exact<{\n  id: Scalars['Int'];\n}>;\n\n\nexport type WorkByIdQuery = (\n  { __typename?: 'Queries' }\n  & { worksById?: Maybe<(\n    { __typename?: 'Work' }\n    & Pick<Work, 'id' | 'title' | 'date' | 'imgPath' | 'html' | 'link' | 'task'>\n    & { authors?: Maybe<Array<Maybe<(\n      { __typename?: 'Author' }\n      & Pick<Author, 'name' | 'link' | 'role'>\n    )>>>, tags?: Maybe<Array<Maybe<(\n      { __typename?: 'TagWork' }\n      & Pick<TagWork, 'tagId'>\n    )>>> }\n  )> }\n);\n\n\nexport const LastWorksDocument = gql`\n    query lastWorks($count: PaginationAmount) {\n  works(first: $count) {\n    nodes {\n      id\n      title\n      shortDescription\n      date\n      imgPath\n    }\n  }\n}\n    `;\n\n/**\n * __useLastWorksQuery__\n *\n * To run a query within a React component, call `useLastWorksQuery` and pass it any options that fit your needs.\n * When your component renders, `useLastWorksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLastWorksQuery({\n *   variables: {\n *      count: // value for 'count'\n *   },\n * });\n */\nexport function useLastWorksQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<LastWorksQuery, LastWorksQueryVariables>) {\n        return ApolloReactHooks.useQuery<LastWorksQuery, LastWorksQueryVariables>(LastWorksDocument, baseOptions);\n      }\nexport function useLastWorksLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<LastWorksQuery, LastWorksQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<LastWorksQuery, LastWorksQueryVariables>(LastWorksDocument, baseOptions);\n        }\nexport type LastWorksQueryHookResult = ReturnType<typeof useLastWorksQuery>;\nexport type LastWorksLazyQueryHookResult = ReturnType<typeof useLastWorksLazyQuery>;\nexport type LastWorksQueryResult = ApolloReactCommon.QueryResult<LastWorksQuery, LastWorksQueryVariables>;\nexport const WorksDocument = gql`\n    query works {\n  works {\n    nodes {\n      id\n      title\n      shortDescription\n      date\n      imgPath\n    }\n  }\n}\n    `;\n\n/**\n * __useWorksQuery__\n *\n * To run a query within a React component, call `useWorksQuery` and pass it any options that fit your needs.\n * When your component renders, `useWorksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useWorksQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useWorksQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<WorksQuery, WorksQueryVariables>) {\n        return ApolloReactHooks.useQuery<WorksQuery, WorksQueryVariables>(WorksDocument, baseOptions);\n      }\nexport function useWorksLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<WorksQuery, WorksQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<WorksQuery, WorksQueryVariables>(WorksDocument, baseOptions);\n        }\nexport type WorksQueryHookResult = ReturnType<typeof useWorksQuery>;\nexport type WorksLazyQueryHookResult = ReturnType<typeof useWorksLazyQuery>;\nexport type WorksQueryResult = ApolloReactCommon.QueryResult<WorksQuery, WorksQueryVariables>;\nexport const WorkByIdDocument = gql`\n    query workById($id: Int!) {\n  worksById(id: $id) {\n    id\n    title\n    date\n    imgPath\n    html\n    link\n    task\n    authors {\n      name\n      link\n      role\n    }\n    tags {\n      tagId\n    }\n  }\n}\n    `;\n\n/**\n * __useWorkByIdQuery__\n *\n * To run a query within a React component, call `useWorkByIdQuery` and pass it any options that fit your needs.\n * When your component renders, `useWorkByIdQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useWorkByIdQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useWorkByIdQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<WorkByIdQuery, WorkByIdQueryVariables>) {\n        return ApolloReactHooks.useQuery<WorkByIdQuery, WorkByIdQueryVariables>(WorkByIdDocument, baseOptions);\n      }\nexport function useWorkByIdLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<WorkByIdQuery, WorkByIdQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<WorkByIdQuery, WorkByIdQueryVariables>(WorkByIdDocument, baseOptions);\n        }\nexport type WorkByIdQueryHookResult = ReturnType<typeof useWorkByIdQuery>;\nexport type WorkByIdLazyQueryHookResult = ReturnType<typeof useWorkByIdLazyQuery>;\nexport type WorkByIdQueryResult = ApolloReactCommon.QueryResult<WorkByIdQuery, WorkByIdQueryVariables>;","import React from \"react\"\r\nimport { Typography } from \"antd\"\r\nimport styles from \"./cards.module.less\"\r\nimport { Maybe } from \"../../types\"\r\n\r\nconst { Title, Paragraph } = Typography\r\n\r\ntype propTypes = {\r\n    title?: Maybe<string>\r\n    desc?: Maybe<string>\r\n    date: string\r\n}\r\n\r\nconst CardDescription: React.FC<propTypes> = (props) => {\r\n    return (\r\n        <div className={styles.desc}>\r\n            <Paragraph style={{ margin: \"0\" }} type=\"secondary\">\r\n                {props.date}\r\n            </Paragraph>\r\n            <Title style={{ marginTop: \"10px\" }} level={3}>\r\n                <span className=\"underline\">{props.title}</span>\r\n            </Title>\r\n            <Paragraph>{props.desc}</Paragraph>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDescription\r\n","import React, { useState, useRef } from \"react\"\r\nimport { Transition } from \"react-transition-group\"\r\nimport styles from \"./cards.module.less\"\r\nimport { Maybe } from \"../../types\"\r\n\r\ntype propTypes = {\r\n    height: number\r\n    img: any //TODO типизировать как-нибудь\r\n    alt?: Maybe<string>\r\n}\r\n\r\nconst ImageCard: React.FC<propTypes> = (props) => {\r\n    const [isMouseEnter, setIsMouseEnter] = useState(false)\r\n    const imgEl = useRef(null as any)\r\n    const imgCard = useRef(null as any)\r\n\r\n    const transitionStyles = () => {\r\n        if (imgEl.current !== null) {\r\n            const height = imgEl.current.height\r\n            const heightContainer = imgCard.current.clientHeight\r\n\r\n            return {\r\n                entering: { top: `-${height - heightContainer}px` },\r\n                entered: { top: \"0\" },\r\n                exiting: {},\r\n                exited: {},\r\n                unmounted: {},\r\n            }\r\n        }\r\n\r\n        return {\r\n            entering: {},\r\n            entered: {},\r\n            exiting: {},\r\n            exited: {},\r\n            unmounted: {},\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={imgCard} className={styles.imageCard} style={{ paddingTop: `${props.height}%` }}>\r\n            <Transition\r\n                in={isMouseEnter}\r\n                exit={false}\r\n                timeout={{\r\n                    enter: 3000,\r\n                }}\r\n            >\r\n                {(state) => (\r\n                    <img\r\n                        src={props.img}\r\n                        ref={imgEl}\r\n                        onMouseOver={() => setIsMouseEnter(!isMouseEnter)}\r\n                        onMouseOut={() => setIsMouseEnter(!isMouseEnter)}\r\n                        style={{ ...transitionStyles()[state] }}\r\n                        className={styles.image}\r\n                        alt={props.alt || \"Изображение в карточке\"}\r\n                    />\r\n                )}\r\n            </Transition>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard\r\n","import React from \"react\"\r\nimport Card from \"./Card\"\r\nimport CardDescription from \"./CardDescription\"\r\nimport ImageCard from \"./ImageCard\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Maybe } from \"../../types\"\r\n\r\nimport styles from \"./cards.module.less\"\r\n\r\ntype propTypes = {\r\n    img: any //TODO как-то типизировать\r\n    title?: Maybe<string>\r\n    date: string\r\n    desc?: Maybe<string>\r\n    id?: Maybe<number>\r\n}\r\n\r\nconst ProjectCard: React.FC<propTypes> = (props) => {\r\n    return (\r\n        <Link to={`portfolio/${props.id}`} className={styles.link}>\r\n            <Card>\r\n                <ImageCard height={65} img={props.img} alt={props.title} />\r\n            </Card>\r\n            <CardDescription date={props.date} title={props.title} desc={props.desc} />\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ProjectCard\r\n","import React from \"react\"\r\nimport { Spin } from \"antd\"\r\nimport styles from \"./Loading.module.less\"\r\n\r\nconst Loading: React.FC = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Spin size=\"large\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\"\r\nimport { Row, Col } from \"antd\"\r\nimport { useLastWorksQuery } from \"../../types\"\r\nimport { getStringDate } from \"../../helpers/dateHelpers\"\r\nimport ProjectCard from \"./ProjectCard\"\r\nimport Loading from \"../loading/Loading\"\r\nimport { Typography } from \"antd\"\r\nimport FadePage from \"../fade/FadePage\"\r\n\r\ntype propTypes = {\r\n    count: number\r\n    className?: string\r\n}\r\n\r\nconst LastProjectCards: React.FC<propTypes> = (props) => {\r\n    const { data, loading, error } = useLastWorksQuery({\r\n        variables: {\r\n            count: props.count,\r\n        },\r\n    })\r\n\r\n    const { Title } = Typography\r\n\r\n    const getWorks = () => {\r\n        if (error) {\r\n            return <pre>{error?.message}</pre>\r\n        }\r\n\r\n        const works = data?.works?.nodes\r\n        if (works)\r\n            return works.map((work) => {\r\n                return (\r\n                    <Col lg={11}>\r\n                        <ProjectCard\r\n                            title={work?.title}\r\n                            date={getStringDate(work?.date)}\r\n                            img={work?.imgPath}\r\n                            id={work?.id}\r\n                            desc={work?.shortDescription}\r\n                        />\r\n                    </Col>\r\n                )\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <Loading />\r\n            ) : (\r\n                <FadePage>\r\n                    <Row justify=\"space-between\" gutter={[0, 50]} className={props.className}>\r\n                        {getWorks() || <Title>Работы пропали</Title>}\r\n                    </Row>\r\n                </FadePage>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LastProjectCards\r\n","import React from \"react\"\r\nimport styles from \"./MainPage.module.less\"\r\nimport { Row, Col, Typography, Button } from \"antd\"\r\nimport Avatar from \"../../components/avatar/Avatar\"\r\nimport { getDaysToEnd } from \"../../helpers/dateHelpers\"\r\nimport Card from \"../../components/cards/Card\"\r\nimport Line from \"../../components/cards/Line\"\r\nimport TagList from \"../../components/tags/TagList\"\r\nimport LocalLink from \"../../components/links/LocalLink\"\r\nimport GlobalLink from \"../../components/links/GlobalLink\"\r\nimport { ArrowRightOutlined } from \"@ant-design/icons\"\r\nimport FadePage from \"../../components/fade/FadePage\"\r\nimport Contacts from \"../../components/avatar/Contacts\"\r\nimport LastProjectCards from \"../../components/cards/LastProjectCards\"\r\nimport webSvg from \"../../assets/web.svg\"\r\n\r\nconst { Title, Paragraph } = Typography\r\n\r\nconst MainPage: React.FC = () => {\r\n    return (\r\n        <>\r\n            <div className=\"main-diagonal\" />\r\n            <FadePage>\r\n                <div className={`${styles.figure} ${styles.square}`} />\r\n                <div className={`${styles.figure} ${styles.circle}`} />\r\n                <div className={`${styles.figure} ${styles.rectangle}`} />\r\n                <div className=\"wrapper-page\">\r\n                    <section className={styles.mainSectionWrapper}>\r\n                        <div className={styles.leftCol}>\r\n                            <img src={webSvg} alt=\"Веб\" />\r\n                        </div>\r\n                        <div className={styles.rightCol}>\r\n                            <h2 className={styles.subMainTitle}>Веб-разработчик</h2>\r\n                            <h1 className={styles.mainTitle}>\r\n                                Дмитрий\r\n                                <br />\r\n                                Бадеев\r\n                            </h1>\r\n                            <Button size=\"large\" type=\"primary\" className={styles.btn}>\r\n                                <LocalLink to=\"/portfolio\">Портфолио</LocalLink>\r\n                            </Button>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className={styles.infoSectionWrapper}>\r\n                        <Row justify=\"space-between\">\r\n                            <Col\r\n                                xl={{ span: 6, offset: 0 }}\r\n                                lg={{ span: 10, offset: 0 }}\r\n                                md={{ span: 12, offset: 6 }}\r\n                                sm={{ span: 16, offset: 4 }}\r\n                                xs={{ span: 24, offset: 0 }}\r\n                            >\r\n                                <Avatar withDesc={true} />\r\n                            </Col>\r\n                            <Col xl={{ span: 16 }} lg={{ span: 12 }} md={{ span: 20, offset: 2 }}>\r\n                                <Row justify=\"space-between\" gutter={[0, 48]}>\r\n                                    <Col xl={{ span: 11 }} lg={{ span: 24 }}>\r\n                                        <Title level={2}>Обо мне</Title>\r\n                                        <Paragraph>\r\n                                            Привет! Я&nbsp;веб-разработчик. Моя сфера деятельности&nbsp;&mdash; это все,\r\n                                            что связано со&nbsp;всемирной паутиной: сайты, веб-приложения, программные\r\n                                            веб-интерфейсы. Я&nbsp;профессионально занимаюсь разработкой\r\n                                            и&nbsp;проектированием интерфейсов уже несколько лет.\r\n                                        </Paragraph>\r\n                                        <Paragraph>\r\n                                            Родился и&nbsp;вырос в&nbsp;городе Кургане, сейчас живу\r\n                                            в&nbsp;Екатеринбурге. Учусь в&nbsp;УрФУ на&nbsp;IT-специальности\r\n                                            и&nbsp;стараюсь постоянно развиваться в&nbsp;своей сфере.\r\n                                        </Paragraph>\r\n                                    </Col>\r\n                                    <Col xl={{ span: 11 }} lg={{ span: 24 }}>\r\n                                        <Title level={2}>Образование</Title>\r\n                                        <Paragraph>\r\n                                            Среднее (полное) <br />\r\n                                            СОШ №24, город Курган <br />\r\n                                            2007–2018 гг.\r\n                                        </Paragraph>\r\n                                        <Paragraph>\r\n                                            Высшее (Бакалавр) <br />\r\n                                            УрФУ им. Ельцина, ИРИТ-РтФ <br />\r\n                                            специальность «Программная инженерия» <br />\r\n                                            2018–2022 гг.\r\n                                        </Paragraph>\r\n                                        <Paragraph type=\"secondary\">До конца {getDaysToEnd()}</Paragraph>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row justify=\"space-between\" className=\"mt-60\">\r\n                                    <Col xl={{ span: 11 }} lg={{ span: 24 }}>\r\n                                        <Title level={2}>Навыки</Title>\r\n                                        <Card className=\"mt-40 p-40\">\r\n                                            <Title level={4}>Frontend</Title>\r\n                                            <Line />\r\n                                            <Paragraph className=\"mt-20\">\r\n                                                Задизайню и сверстаю сайт, адаптирую его под все телефоны, планшеты,\r\n                                                мониторы и заставлю это все работать одинаково во всех браузерах.\r\n                                            </Paragraph>\r\n                                            <TagList\r\n                                                tagList={[\r\n                                                    \"HTML\",\r\n                                                    \"CSS\",\r\n                                                    \"SaSS\",\r\n                                                    \"SCSS\",\r\n                                                    \"LESS\",\r\n                                                    \"PostCSS\",\r\n                                                    \"JS\",\r\n                                                    \"TypeScript\",\r\n                                                    \"ReactJS\",\r\n                                                    \"Webpack\",\r\n                                                    \"Gulp\",\r\n                                                    \"Дизайн\",\r\n                                                ]}\r\n                                            />\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col xl={{ span: 11 }} lg={{ span: 24 }}>\r\n                                        <Title\r\n                                            level={2}\r\n                                            style={{\r\n                                                opacity: 0,\r\n                                                cursor: \"default\",\r\n                                            }}\r\n                                        >\r\n                                            Навыки\r\n                                        </Title>\r\n                                        <Card className=\"mt-40 p-40\">\r\n                                            <Title level={4}>Backend</Title>\r\n                                            <Line />\r\n                                            <Paragraph className=\"mt-20\">\r\n                                                Напишу сложную бизнес-логику, настрою CMS, организую базу данных и\r\n                                                заставлю большую и сложную систему работать, как часы.\r\n                                            </Paragraph>\r\n                                            <TagList\r\n                                                tagList={[\r\n                                                    \"C#\",\r\n                                                    \"ASP.NET Core\",\r\n                                                    \"REST API\",\r\n                                                    \"ООП\",\r\n                                                    \"Entity Framework\",\r\n                                                    \"CMS\",\r\n                                                    \"Базы данных\",\r\n                                                    \"MSSql\",\r\n                                                    \"PostgreSql\",\r\n                                                ]}\r\n                                            />\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </section>\r\n\r\n                    <section>\r\n                        <Title level={2}>Последние проекты</Title>\r\n                        <LastProjectCards count={2} className=\"mt-40\" />\r\n\r\n                        <div className={styles.linkContainer}>\r\n                            <LocalLink to=\"/portfolio\" className={styles.link}>\r\n                                Все работы <ArrowRightOutlined />\r\n                            </LocalLink>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section>\r\n                        <div className={styles.mainContacts}>\r\n                            <div className={styles.innerContacts}>\r\n                                <div className={styles.mainMail}>\r\n                                    <GlobalLink to=\"mailto:mail@badeev.info\">mail@badeev.info</GlobalLink>\r\n                                </div>\r\n                                <div className={styles.mainOther}>\r\n                                    <Contacts SizeInPixel={50} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </FadePage>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from \"react\"\r\nimport FadePage from \"../../components/fade/FadePage\"\r\nimport LastProjectCards from \"../../components/cards/LastProjectCards\"\r\n\r\nconst PortfolioPage: React.FC = () => {\r\n    return (\r\n        <FadePage>\r\n            <div className=\"mt-40\"></div>\r\n            <div className=\"wrapper-page\">\r\n                <LastProjectCards count={5} />\r\n            </div>\r\n        </FadePage>\r\n    )\r\n}\r\n\r\nexport default PortfolioPage\r\n","import React from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport FadePage from \"../../components/fade/FadePage\"\r\nimport { useWorkByIdQuery } from \"../../types\"\r\nimport Loading from \"../../components/loading/Loading\"\r\nimport { Typography } from \"antd\"\r\n\r\ntype paramsTypes = {\r\n    id: string\r\n}\r\n\r\nconst { Title } = Typography\r\n\r\nconst WorkPage: React.FC = () => {\r\n    let { id } = useParams<paramsTypes>()\r\n\r\n    const { data, loading } = useWorkByIdQuery({\r\n        variables: {\r\n            id: Number(id),\r\n        },\r\n    })\r\n\r\n    return loading ? (\r\n        <Loading />\r\n    ) : (\r\n        <FadePage>\r\n            <div className=\"wrapper-page\">\r\n                <Title level={1}>{data?.worksById?.title}</Title>\r\n            </div>\r\n        </FadePage>\r\n    )\r\n}\r\n\r\nexport default WorkPage\r\n","import React from \"react\"\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\"\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport ApolloClient from \"apollo-boost\"\nimport Shared from \"./pages/shared/Shared\"\nimport MainPage from \"./pages/main/MainPage\"\nimport PortfolioPage from \"./pages/portfolio/PortfolioPage\"\nimport WorkPage from \"./pages/work/WorkPage\"\n\nconst client = new ApolloClient({\n    uri: \"http://api.badeev.info/graphql?\",\n})\n\nconst App: React.FC = () => {\n    return (\n        <ApolloProvider client={client}>\n            <BrowserRouter>\n                <Shared>\n                    <Switch>\n                        <Route path=\"/\" component={MainPage} exact />\n                        <Route path=\"/portfolio\" component={PortfolioPage} exact />\n                        <Route path=\"/portfolio/:id\" component={WorkPage} />\n                    </Switch>\n                </Shared>\n            </BrowserRouter>\n        </ApolloProvider>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.less\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card--3IO0s\",\"line\":\"line--3sFjT\",\"imageCard\":\"imageCard--NNmkB\",\"link\":\"link--2KSfG\",\"image\":\"image--2TFGX\",\"desc\":\"desc--2pW0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarWrapper\":\"avatarWrapper--29-Mg\",\"avatar\":\"avatar--1MvU6\",\"avatarDesc\":\"avatarDesc--mRDv1\",\"info\":\"info--hlJz6\",\"name\":\"name--38cAd\",\"iconLink\":\"iconLink--2SiJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"default--3vh93\",\"dark\":\"dark--3RMjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"background--i28Z9\",\"wrapper\":\"wrapper--1O49e\",\"cross\":\"cross--17ii6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"tag--16BcH\",\"tagList\":\"tagList--41E67\"};"],"sourceRoot":""}